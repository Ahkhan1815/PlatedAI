name: Deploy to AWS ECS

on:
  push:
    branches: [ main ]

env:
  FRONTEND_REPOSITORY: plated-ai/frontend
  BACKEND_REPOSITORY: plated-ai/backend

jobs:
  deploy:
    runs-on: ubuntu-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and Push Docker Images
        run: |
          docker compose build
          
          docker tag plated_ai-plated-client:latest ${{ secrets.ECR_REGISTRY }}/$FRONTEND_REPOSITORY:latest
          docker tag plated_ai-plated-client:latest ${{ secrets.ECR_REGISTRY }}/$FRONTEND_REPOSITORY:${{ github.sha }}
          docker push ${{ secrets.ECR_REGISTRY }}/$FRONTEND_REPOSITORY:latest
          docker push ${{ secrets.ECR_REGISTRY }}/$FRONTEND_REPOSITORY:${{ github.sha }}
          
          docker tag plated_ai-plated-server:latest ${{ secrets.ECR_REGISTRY }}/$BACKEND_REPOSITORY:latest
          docker tag plated_ai-plated-server:latest ${{ secrets.ECR_REGISTRY }}/$BACKEND_REPOSITORY:${{ github.sha }}
          docker push ${{ secrets.ECR_REGISTRY }}/$BACKEND_REPOSITORY:latest
          docker push ${{ secrets.ECR_REGISTRY }}/$BACKEND_REPOSITORY:${{ github.sha }}
          
      - name: Force ECS Update
        run: |
          aws ecs update-service --cluster DevCluster --service platedAI-task-service-zn5a0rsm --force-new-deployment